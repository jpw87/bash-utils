#!/bin/sh
# Generates a file with random binary contents

echo "Running random file generator"

display_help () {
	echo -e "\n---Random file generator---"
	echo "  Usage:"
	echo "    [script_name] [num files] [file size]"
	echo "    Example run that creates 3 files at 45000 bytes each:"
	echo "    ./filegen 3 45000"
}

generate_file () {
	# Get vars
	count=$1
	file_size=$2
	datetime=$3

	# Get datetime
	datetime=$(date +"%Y%m%d_%H%M%S")

	# Build file name
	file_name="GEN_FILE_${count}_${file_size}_${datetime}"

	# Generate the file with random data
	head -c ${file_size} </dev/urandom >${file_name}
	echo "Generated file ${file_name}"
}

# Get the file count; default=1
file_count=${1}
if [ -z $file_count ]; then
	echo "Using default file count of 1 file"
        file_count=1
elif [ $file_count -lt 1 ]; then
	echo "File count cannot be less than 1"
	display_help
	exit 1
fi
echo "Generating ${file_count} file(s)"

# Get the file size; default=10000 bytes
file_size=${2}
if [ -z $file_size ]; then
	echo "Using default file size of 10000 bytes"
        file_size=10000
elif [ $file_size -lt 1 ]; then
	echo "File size cannot be less than 1"
	display_help
	exit 1
fi
echo "File size set to ${file_size} bytes"

count=0
while [ $count -lt $file_count ]; do

	# Use the generate file function async
	generate_file $count $file_size $datetime &

        # Add pid of backgrounded process to children list
	# This string will hold the children pids space delimited list
	# Arrays in bash would prefereable but currently writing this to work in ash
        # TODO is there a more efficient string concat?
        children="$children $!"

	# Increment our count used to track while loop and in file name
        count=$((count + 1))
done

# Wait for background processes to finish up
for pid in $children
do
        wait $pid
done

exit 0

